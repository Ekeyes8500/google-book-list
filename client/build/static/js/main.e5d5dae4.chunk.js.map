{"version":3,"sources":["components/ContentContainer/index.js","components/contentcard/index.js","components/searchbar/searchbar.js","components/submitbutton/submitbutton.js","components/savebutton/savebutton.js","utils/API.js","pages/Search.js","components/deletebutton/deletebutton.js","pages/Saved.js","components/navbar/index.js","components/jumbotron/jumbotron.js","App.js","registerServiceWorker.js","index.js"],"names":["ContentContainer","_ref","children","react_default","a","createElement","className","ContentCard","props","src","imageLink","alt","bookTitle","authors","map","author","description","href","bookLink","target","SearchBar","type","placeholder","aria-label","value","input","onChange","handleChange","aria-describedby","submitButton","onClick","handleClick","SaveButton","Object","assign","API","searchBookTitle","title","axios","get","addSaved","bookData","post","findAll","deleteOne","bookId","delete","Search","state","resultArray","apiQuery","query","then","res","_this","updateResults","data","console","log","items","length","this","setState","book","exportObject","volumeInfo","image","imageLinks","thumbnail","link","infoLink","catch","err","event","_this2","searchbar","bind","submitbutton","components_ContentContainer","result","contentcard","key","id","savebutton","createEntry","Component","DeleteButton","Saved","findBooks","deleteBook","_id","deletebutton","Nav","Jumbotron","App","BrowserRouter","navbar","jumbotron","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e5d5dae4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ContentContainer({children}){\r\n    return(\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContentContainer;","import React from \"react\";\r\n// import \"./style.css\";\r\n\r\nconst ContentCard = props => (\r\n    <div className=\"card flex-row flex-wrap mt-2 mr-1 ml-1 mb-3 pb-2\">\r\n        <div className=\"card-header border-0\">\r\n            <img src={props.imageLink} alt=\"\" className=\"bookPhoto\"/>\r\n        </div>\r\n        <div className=\"card-block px-2\">\r\n            <h4 className=\"card-title\">{props.bookTitle}</h4>\r\n            {props.authors.map(author =>(\r\n                <h5 className=\"card-body\">{author}</h5>\r\n            ))}\r\n            <p className=\"card-text\">{props.description}</p>\r\n            {props.children}\r\n            <a href={props.bookLink} className=\"btn btn-secondary mb-3 d-inline\" target=\"_blank\">Link to book</a>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ContentCard;","import React from \"react\";\r\n\r\nconst SearchBar = (props) => (\r\n    <div className=\"input-group mb-3\">\r\n        <input type=\"text\" className=\"form-control d-inline\" placeholder=\"Search for Book\" aria-label=\"Search for Book\" value={props.input} onChange={props.handleChange} aria-describedby=\"basic-addon2\"/>\r\n        <div className=\"input-group-append\"/>\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nconst submitButton = (props) => (\r\n    <button className=\"btn btn-outline-secondary ml-1 mb-2 d-inline\" type=\"button\" onClick={props.handleClick}>Search</button>\r\n)\r\n\r\nexport default submitButton;","import React from \"react\"\r\n\r\nconst SaveButton = (props) => (\r\n    <div {...props} className=\"btn btn-primary mb-3 d-inline mr-1\">Save to list</div>\r\n)\r\n\r\nexport default SaveButton;","import axios from \"axios\";\r\n\r\n//export of function to operate google books api\r\nconst apiKey = \"AIzaSyAeQdUUunWQvAZGDeyZISKz1ysOzC7THJc\";\r\n\r\nexport default {\r\n    searchBookTitle: function(title){\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + title)\r\n    },\r\n\r\n    addSaved: function(bookData){\r\n        return axios.post(\"/api/books\", bookData)\r\n    },\r\n\r\n    findAll: function(){\r\n        return axios.get(\"/api/books\")\r\n    },\r\n\r\n    deleteOne: function(bookId){\r\n        return axios.delete(\"/api/books/\" + bookId)\r\n    }\r\n}","import React, {Component} from \"react\";\r\nimport ContentContainer from \"../components/ContentContainer\";\r\nimport ContentCard from \"../components/contentcard\";\r\nimport SearchBar from \"../components/searchbar\";\r\nimport SubmitButton from \"../components/submitbutton\";\r\nimport SaveButton from \"../components/savebutton\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        resultArray: [],\r\n        input:\"\"\r\n    }\r\n    //function to handle API queries to the google books database\r\n    apiQuery = (query) => {\r\n        API.searchBookTitle(query)\r\n        .then(res => this.updateResults(res.data))\r\n    }\r\n\r\n    updateResults(data){\r\n        console.log(data)\r\n        if (data.items.length > 0){\r\n            this.setState({resultArray: data.items})\r\n        }\r\n        \r\n    }\r\n\r\n    createEntry(book){\r\n        console.log(book);\r\n        let exportObject = {\r\n             title: book.volumeInfo.title,\r\n             authors: book.volumeInfo.authors,\r\n             description: book.volumeInfo.description,\r\n             image: book.volumeInfo.imageLinks.thumbnail,\r\n             link: book.volumeInfo.infoLink\r\n         }\r\n         API.addSaved(exportObject)\r\n         .then(res => console.log(res))\r\n         .catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"ready\")\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({input: event.target.value})\r\n        console.log(this.state.input)\r\n    }\r\n\r\n    handleClick() {\r\n        this.apiQuery(this.state.input);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"container\">\r\n            <SearchBar\r\n            value={this.state.input}\r\n            handleChange={this.handleChange.bind(this)}\r\n            >\r\n                <SubmitButton\r\n                    handleClick={this.handleClick.bind(this)}\r\n                />\r\n            </SearchBar>\r\n\r\n            <ContentContainer>\r\n                {this.state && this.state.resultArray && this.state.resultArray.map(result=>(\r\n    \r\n                    <ContentCard\r\n                    key={result.id}\r\n                    imageLink={result.volumeInfo.imageLinks.thumbnail}\r\n                    bookTitle={result.volumeInfo.title}\r\n                    bookLink={result.volumeInfo.infoLink}\r\n                    authors={result.volumeInfo.authors}\r\n                    description={result.volumeInfo.description}\r\n                    >\r\n                        <SaveButton onClick={()=>this.createEntry(result)}/>\r\n                    </ContentCard>\r\n                ))}\r\n            </ContentContainer>\r\n        </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React from \"react\"\r\n\r\n\r\nconst DeleteButton = (props) => (\r\n    <div {...props} className=\"btn btn-danger mb-3 d-inline mr-1\">Delete from List</div>\r\n)\r\n\r\nexport default DeleteButton;","import React, {Component} from \"react\";\r\nimport ContentContainer from \"../components/ContentContainer\";\r\nimport ContentCard from \"../components/contentcard\";\r\nimport API from \"../utils/API\"\r\nimport DeleteButton from \"../components/deletebutton\"\r\n\r\nclass Saved extends Component {\r\n    state={\r\n        resultArray:[]\r\n    }\r\n    componentDidMount(){\r\n        this.findBooks();\r\n    }\r\n\r\n    findBooks = () => (\r\n        API.findAll()\r\n        .then(res=>\r\n            this.setState({resultArray: res.data})\r\n        )\r\n        .catch(err=>err)\r\n    )\r\n    deleteBook = (id) => (\r\n        API.deleteOne(id)\r\n        .then(res => this.findBooks())\r\n        .catch(err => console.log(err))\r\n    )\r\n\r\n    render(){\r\n        return(\r\n        <ContentContainer>\r\n            {this.state.resultArray.map(result=>(\r\n    \r\n                <ContentCard\r\n                key={result._id}\r\n                imageLink={result.image}\r\n                bookTitle={result.title}\r\n                bookLink={result.link}\r\n                authors={result.authors}\r\n                description={result.description}\r\n                >\r\n                <DeleteButton onClick={()=>this.deleteBook(result._id)}/>\r\n                </ContentCard>\r\n            ))}\r\n        </ContentContainer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\n\r\nfunction Nav(){\r\n    return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\">Google Books</a>\r\n        <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/\">Search</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/saved\">Saved</a>\r\n      </li>\r\n    </ul>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nfunction Jumbotron({children}){\r\n    return(\r\n        <div className=\"jumbotron text-center\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\"\nimport Saved from \"./pages/Saved\"\nimport Nav from \"./components/navbar\"\nimport \"./App.css\";\nimport Jumbotron from \"./components/jumbotron\";\n\nfunction App() {\n  return (\n    <Router>\n      \n      <div>\n      <Nav/>\n        <Jumbotron>\n            <h1>(React) Google Book Search</h1>\n            <h5>Search for and save books of interest from the Google Books API</h5>\n        </Jumbotron>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}